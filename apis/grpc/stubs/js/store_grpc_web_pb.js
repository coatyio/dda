/**
 * @fileoverview gRPC-Web generated client stub for dda.store.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.23.3
// source: store.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.dda = {};
proto.dda.store = {};
proto.dda.store.v1 = require('./store_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.dda.store.v1.StoreServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.dda.store.v1.StoreServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.Key,
 *   !proto.dda.store.v1.Value>}
 */
const methodDescriptor_StoreService_Get = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/Get',
  grpc.web.MethodType.UNARY,
  proto.dda.store.v1.Key,
  proto.dda.store.v1.Value,
  /**
   * @param {!proto.dda.store.v1.Key} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.Value.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.Key} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.dda.store.v1.Value)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.Value>|undefined}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dda.store.v1.StoreService/Get',
      request,
      metadata || {},
      methodDescriptor_StoreService_Get,
      callback);
};


/**
 * @param {!proto.dda.store.v1.Key} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.dda.store.v1.Value>}
 *     Promise that resolves to the response
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dda.store.v1.StoreService/Get',
      request,
      metadata || {},
      methodDescriptor_StoreService_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.KeyValue,
 *   !proto.dda.store.v1.Ack>}
 */
const methodDescriptor_StoreService_Set = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/Set',
  grpc.web.MethodType.UNARY,
  proto.dda.store.v1.KeyValue,
  proto.dda.store.v1.Ack,
  /**
   * @param {!proto.dda.store.v1.KeyValue} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.Ack.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.KeyValue} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.dda.store.v1.Ack)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.Ack>|undefined}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.set =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dda.store.v1.StoreService/Set',
      request,
      metadata || {},
      methodDescriptor_StoreService_Set,
      callback);
};


/**
 * @param {!proto.dda.store.v1.KeyValue} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.dda.store.v1.Ack>}
 *     Promise that resolves to the response
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.set =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dda.store.v1.StoreService/Set',
      request,
      metadata || {},
      methodDescriptor_StoreService_Set);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.Key,
 *   !proto.dda.store.v1.Ack>}
 */
const methodDescriptor_StoreService_Delete = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/Delete',
  grpc.web.MethodType.UNARY,
  proto.dda.store.v1.Key,
  proto.dda.store.v1.Ack,
  /**
   * @param {!proto.dda.store.v1.Key} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.Ack.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.Key} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.dda.store.v1.Ack)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.Ack>|undefined}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dda.store.v1.StoreService/Delete',
      request,
      metadata || {},
      methodDescriptor_StoreService_Delete,
      callback);
};


/**
 * @param {!proto.dda.store.v1.Key} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.dda.store.v1.Ack>}
 *     Promise that resolves to the response
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dda.store.v1.StoreService/Delete',
      request,
      metadata || {},
      methodDescriptor_StoreService_Delete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.DeleteAllParams,
 *   !proto.dda.store.v1.Ack>}
 */
const methodDescriptor_StoreService_DeleteAll = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/DeleteAll',
  grpc.web.MethodType.UNARY,
  proto.dda.store.v1.DeleteAllParams,
  proto.dda.store.v1.Ack,
  /**
   * @param {!proto.dda.store.v1.DeleteAllParams} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.Ack.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.DeleteAllParams} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.dda.store.v1.Ack)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.Ack>|undefined}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.deleteAll =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dda.store.v1.StoreService/DeleteAll',
      request,
      metadata || {},
      methodDescriptor_StoreService_DeleteAll,
      callback);
};


/**
 * @param {!proto.dda.store.v1.DeleteAllParams} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.dda.store.v1.Ack>}
 *     Promise that resolves to the response
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.deleteAll =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dda.store.v1.StoreService/DeleteAll',
      request,
      metadata || {},
      methodDescriptor_StoreService_DeleteAll);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.Key,
 *   !proto.dda.store.v1.Ack>}
 */
const methodDescriptor_StoreService_DeletePrefix = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/DeletePrefix',
  grpc.web.MethodType.UNARY,
  proto.dda.store.v1.Key,
  proto.dda.store.v1.Ack,
  /**
   * @param {!proto.dda.store.v1.Key} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.Ack.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.Key} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.dda.store.v1.Ack)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.Ack>|undefined}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.deletePrefix =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dda.store.v1.StoreService/DeletePrefix',
      request,
      metadata || {},
      methodDescriptor_StoreService_DeletePrefix,
      callback);
};


/**
 * @param {!proto.dda.store.v1.Key} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.dda.store.v1.Ack>}
 *     Promise that resolves to the response
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.deletePrefix =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dda.store.v1.StoreService/DeletePrefix',
      request,
      metadata || {},
      methodDescriptor_StoreService_DeletePrefix);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.Range,
 *   !proto.dda.store.v1.Ack>}
 */
const methodDescriptor_StoreService_DeleteRange = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/DeleteRange',
  grpc.web.MethodType.UNARY,
  proto.dda.store.v1.Range,
  proto.dda.store.v1.Ack,
  /**
   * @param {!proto.dda.store.v1.Range} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.Ack.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.Range} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.dda.store.v1.Ack)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.Ack>|undefined}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.deleteRange =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dda.store.v1.StoreService/DeleteRange',
      request,
      metadata || {},
      methodDescriptor_StoreService_DeleteRange,
      callback);
};


/**
 * @param {!proto.dda.store.v1.Range} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.dda.store.v1.Ack>}
 *     Promise that resolves to the response
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.deleteRange =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dda.store.v1.StoreService/DeleteRange',
      request,
      metadata || {},
      methodDescriptor_StoreService_DeleteRange);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.Key,
 *   !proto.dda.store.v1.KeyValue>}
 */
const methodDescriptor_StoreService_ScanPrefix = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/ScanPrefix',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.dda.store.v1.Key,
  proto.dda.store.v1.KeyValue,
  /**
   * @param {!proto.dda.store.v1.Key} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.KeyValue.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.Key} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.KeyValue>}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.scanPrefix =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/dda.store.v1.StoreService/ScanPrefix',
      request,
      metadata || {},
      methodDescriptor_StoreService_ScanPrefix);
};


/**
 * @param {!proto.dda.store.v1.Key} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.KeyValue>}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.scanPrefix =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/dda.store.v1.StoreService/ScanPrefix',
      request,
      metadata || {},
      methodDescriptor_StoreService_ScanPrefix);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.dda.store.v1.Range,
 *   !proto.dda.store.v1.KeyValue>}
 */
const methodDescriptor_StoreService_ScanRange = new grpc.web.MethodDescriptor(
  '/dda.store.v1.StoreService/ScanRange',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.dda.store.v1.Range,
  proto.dda.store.v1.KeyValue,
  /**
   * @param {!proto.dda.store.v1.Range} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.dda.store.v1.KeyValue.deserializeBinary
);


/**
 * @param {!proto.dda.store.v1.Range} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.KeyValue>}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServiceClient.prototype.scanRange =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/dda.store.v1.StoreService/ScanRange',
      request,
      metadata || {},
      methodDescriptor_StoreService_ScanRange);
};


/**
 * @param {!proto.dda.store.v1.Range} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.dda.store.v1.KeyValue>}
 *     The XHR Node Readable Stream
 */
proto.dda.store.v1.StoreServicePromiseClient.prototype.scanRange =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/dda.store.v1.StoreService/ScanRange',
      request,
      metadata || {},
      methodDescriptor_StoreService_ScanRange);
};


module.exports = proto.dda.store.v1;

